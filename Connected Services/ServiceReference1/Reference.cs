//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.eClaimLink.ae/", ConfigurationName="ServiceReference1.ValidateTransactionsSoap")]
    internal interface ValidateTransactionsSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/GetNewTransactions", ReplyAction="*")]
        ServiceReference1.GetNewTransactionsResponse GetNewTransactions(ServiceReference1.GetNewTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/GetNewTransactions", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetNewTransactionsResponse> GetNewTransactionsAsync(ServiceReference1.GetNewTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/GetNewPriorAuthorizationTransactions", ReplyAction="*")]
        ServiceReference1.GetNewPriorAuthorizationTransactionsResponse GetNewPriorAuthorizationTransactions(ServiceReference1.GetNewPriorAuthorizationTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/GetNewPriorAuthorizationTransactions", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.GetNewPriorAuthorizationTransactionsResponse> GetNewPriorAuthorizationTransactionsAsync(ServiceReference1.GetNewPriorAuthorizationTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/UploadTransaction", ReplyAction="*")]
        ServiceReference1.UploadTransactionResponse UploadTransaction(ServiceReference1.UploadTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/UploadTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.UploadTransactionResponse> UploadTransactionAsync(ServiceReference1.UploadTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/DownloadTransactionFile", ReplyAction="*")]
        ServiceReference1.DownloadTransactionFileResponse DownloadTransactionFile(ServiceReference1.DownloadTransactionFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/DownloadTransactionFile", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.DownloadTransactionFileResponse> DownloadTransactionFileAsync(ServiceReference1.DownloadTransactionFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/CheckForNewPriorAuthorizationTransactions", ReplyAction="*")]
        ServiceReference1.CheckForNewPriorAuthorizationTransactionsResponse CheckForNewPriorAuthorizationTransactions(ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/CheckForNewPriorAuthorizationTransactions", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.CheckForNewPriorAuthorizationTransactionsResponse> CheckForNewPriorAuthorizationTransactionsAsync(ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/SetTransactionDownloaded", ReplyAction="*")]
        ServiceReference1.SetTransactionDownloadedResponse SetTransactionDownloaded(ServiceReference1.SetTransactionDownloadedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/SetTransactionDownloaded", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.SetTransactionDownloadedResponse> SetTransactionDownloadedAsync(ServiceReference1.SetTransactionDownloadedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/SearchTransactions", ReplyAction="*")]
        ServiceReference1.SearchTransactionsResponse SearchTransactions(ServiceReference1.SearchTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.eClaimLink.ae/SearchTransactions", ReplyAction="*")]
        System.Threading.Tasks.Task<ServiceReference1.SearchTransactionsResponse> SearchTransactionsAsync(ServiceReference1.SearchTransactionsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class GetNewTransactionsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNewTransactions", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.GetNewTransactionsRequestBody Body;
        
        public GetNewTransactionsRequest()
        {
        }
        
        public GetNewTransactionsRequest(ServiceReference1.GetNewTransactionsRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class GetNewTransactionsRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        public GetNewTransactionsRequestBody()
        {
        }
        
        public GetNewTransactionsRequestBody(string login, string pwd)
        {
            this.login = login;
            this.pwd = pwd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class GetNewTransactionsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNewTransactionsResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.GetNewTransactionsResponseBody Body;
        
        public GetNewTransactionsResponse()
        {
        }
        
        public GetNewTransactionsResponse(ServiceReference1.GetNewTransactionsResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class GetNewTransactionsResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GetNewTransactionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string xmlTransaction;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string errorMessage;
        
        public GetNewTransactionsResponseBody()
        {
        }
        
        public GetNewTransactionsResponseBody(int GetNewTransactionsResult, string xmlTransaction, string errorMessage)
        {
            this.GetNewTransactionsResult = GetNewTransactionsResult;
            this.xmlTransaction = xmlTransaction;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class GetNewPriorAuthorizationTransactionsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNewPriorAuthorizationTransactions", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.GetNewPriorAuthorizationTransactionsRequestBody Body;
        
        public GetNewPriorAuthorizationTransactionsRequest()
        {
        }
        
        public GetNewPriorAuthorizationTransactionsRequest(ServiceReference1.GetNewPriorAuthorizationTransactionsRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class GetNewPriorAuthorizationTransactionsRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        public GetNewPriorAuthorizationTransactionsRequestBody()
        {
        }
        
        public GetNewPriorAuthorizationTransactionsRequestBody(string login, string pwd)
        {
            this.login = login;
            this.pwd = pwd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class GetNewPriorAuthorizationTransactionsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetNewPriorAuthorizationTransactionsResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.GetNewPriorAuthorizationTransactionsResponseBody Body;
        
        public GetNewPriorAuthorizationTransactionsResponse()
        {
        }
        
        public GetNewPriorAuthorizationTransactionsResponse(ServiceReference1.GetNewPriorAuthorizationTransactionsResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class GetNewPriorAuthorizationTransactionsResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int GetNewPriorAuthorizationTransactionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string xmlTransaction;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string errorMessage;
        
        public GetNewPriorAuthorizationTransactionsResponseBody()
        {
        }
        
        public GetNewPriorAuthorizationTransactionsResponseBody(int GetNewPriorAuthorizationTransactionsResult, string xmlTransaction, string errorMessage)
        {
            this.GetNewPriorAuthorizationTransactionsResult = GetNewPriorAuthorizationTransactionsResult;
            this.xmlTransaction = xmlTransaction;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class UploadTransactionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadTransaction", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.UploadTransactionRequestBody Body;
        
        public UploadTransactionRequest()
        {
        }
        
        public UploadTransactionRequest(ServiceReference1.UploadTransactionRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class UploadTransactionRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] fileContent;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string fileName;
        
        public UploadTransactionRequestBody()
        {
        }
        
        public UploadTransactionRequestBody(string login, string pwd, byte[] fileContent, string fileName)
        {
            this.login = login;
            this.pwd = pwd;
            this.fileContent = fileContent;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class UploadTransactionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadTransactionResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.UploadTransactionResponseBody Body;
        
        public UploadTransactionResponse()
        {
        }
        
        public UploadTransactionResponse(ServiceReference1.UploadTransactionResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class UploadTransactionResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int UploadTransactionResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string errorMessage;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] errorReport;
        
        public UploadTransactionResponseBody()
        {
        }
        
        public UploadTransactionResponseBody(int UploadTransactionResult, string errorMessage, byte[] errorReport)
        {
            this.UploadTransactionResult = UploadTransactionResult;
            this.errorMessage = errorMessage;
            this.errorReport = errorReport;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class DownloadTransactionFileRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DownloadTransactionFile", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.DownloadTransactionFileRequestBody Body;
        
        public DownloadTransactionFileRequest()
        {
        }
        
        public DownloadTransactionFileRequest(ServiceReference1.DownloadTransactionFileRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class DownloadTransactionFileRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fileId;
        
        public DownloadTransactionFileRequestBody()
        {
        }
        
        public DownloadTransactionFileRequestBody(string login, string pwd, string fileId)
        {
            this.login = login;
            this.pwd = pwd;
            this.fileId = fileId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class DownloadTransactionFileResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DownloadTransactionFileResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.DownloadTransactionFileResponseBody Body;
        
        public DownloadTransactionFileResponse()
        {
        }
        
        public DownloadTransactionFileResponse(ServiceReference1.DownloadTransactionFileResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class DownloadTransactionFileResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int DownloadTransactionFileResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string fileName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public byte[] file;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string errorMessage;
        
        public DownloadTransactionFileResponseBody()
        {
        }
        
        public DownloadTransactionFileResponseBody(int DownloadTransactionFileResult, string fileName, byte[] file, string errorMessage)
        {
            this.DownloadTransactionFileResult = DownloadTransactionFileResult;
            this.fileName = fileName;
            this.file = file;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class CheckForNewPriorAuthorizationTransactionsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckForNewPriorAuthorizationTransactions", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequestBody Body;
        
        public CheckForNewPriorAuthorizationTransactionsRequest()
        {
        }
        
        public CheckForNewPriorAuthorizationTransactionsRequest(ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class CheckForNewPriorAuthorizationTransactionsRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        public CheckForNewPriorAuthorizationTransactionsRequestBody()
        {
        }
        
        public CheckForNewPriorAuthorizationTransactionsRequestBody(string login, string pwd)
        {
            this.login = login;
            this.pwd = pwd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class CheckForNewPriorAuthorizationTransactionsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CheckForNewPriorAuthorizationTransactionsResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.CheckForNewPriorAuthorizationTransactionsResponseBody Body;
        
        public CheckForNewPriorAuthorizationTransactionsResponse()
        {
        }
        
        public CheckForNewPriorAuthorizationTransactionsResponse(ServiceReference1.CheckForNewPriorAuthorizationTransactionsResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class CheckForNewPriorAuthorizationTransactionsResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int CheckForNewPriorAuthorizationTransactionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string errorMessage;
        
        public CheckForNewPriorAuthorizationTransactionsResponseBody()
        {
        }
        
        public CheckForNewPriorAuthorizationTransactionsResponseBody(int CheckForNewPriorAuthorizationTransactionsResult, string errorMessage)
        {
            this.CheckForNewPriorAuthorizationTransactionsResult = CheckForNewPriorAuthorizationTransactionsResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class SetTransactionDownloadedRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetTransactionDownloaded", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.SetTransactionDownloadedRequestBody Body;
        
        public SetTransactionDownloadedRequest()
        {
        }
        
        public SetTransactionDownloadedRequest(ServiceReference1.SetTransactionDownloadedRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class SetTransactionDownloadedRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string fieldId;
        
        public SetTransactionDownloadedRequestBody()
        {
        }
        
        public SetTransactionDownloadedRequestBody(string login, string pwd, string fieldId)
        {
            this.login = login;
            this.pwd = pwd;
            this.fieldId = fieldId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class SetTransactionDownloadedResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetTransactionDownloadedResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.SetTransactionDownloadedResponseBody Body;
        
        public SetTransactionDownloadedResponse()
        {
        }
        
        public SetTransactionDownloadedResponse(ServiceReference1.SetTransactionDownloadedResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class SetTransactionDownloadedResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int SetTransactionDownloadedResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string errorMessage;
        
        public SetTransactionDownloadedResponseBody()
        {
        }
        
        public SetTransactionDownloadedResponseBody(int SetTransactionDownloadedResult, string errorMessage)
        {
            this.SetTransactionDownloadedResult = SetTransactionDownloadedResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class SearchTransactionsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SearchTransactions", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.SearchTransactionsRequestBody Body;
        
        public SearchTransactionsRequest()
        {
        }
        
        public SearchTransactionsRequest(ServiceReference1.SearchTransactionsRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class SearchTransactionsRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string login;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string pwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int direction;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string callerLicense;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string ePartner;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int transactionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int TransactionStatus;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string transactionFileName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string transactionFromDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string transactionToDate;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public int minRecordCount;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int maxRecordCount;
        
        public SearchTransactionsRequestBody()
        {
        }
        
        public SearchTransactionsRequestBody(string login, string pwd, int direction, string callerLicense, string ePartner, int transactionID, int TransactionStatus, string transactionFileName, string transactionFromDate, string transactionToDate, int minRecordCount, int maxRecordCount)
        {
            this.login = login;
            this.pwd = pwd;
            this.direction = direction;
            this.callerLicense = callerLicense;
            this.ePartner = ePartner;
            this.transactionID = transactionID;
            this.TransactionStatus = TransactionStatus;
            this.transactionFileName = transactionFileName;
            this.transactionFromDate = transactionFromDate;
            this.transactionToDate = transactionToDate;
            this.minRecordCount = minRecordCount;
            this.maxRecordCount = maxRecordCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class SearchTransactionsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SearchTransactionsResponse", Namespace="http://www.eClaimLink.ae/", Order=0)]
        public ServiceReference1.SearchTransactionsResponseBody Body;
        
        public SearchTransactionsResponse()
        {
        }
        
        public SearchTransactionsResponse(ServiceReference1.SearchTransactionsResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://www.eClaimLink.ae/")]
    internal partial class SearchTransactionsResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int SearchTransactionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string foundTransactions;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string errorMessage;
        
        public SearchTransactionsResponseBody()
        {
        }
        
        public SearchTransactionsResponseBody(int SearchTransactionsResult, string foundTransactions, string errorMessage)
        {
            this.SearchTransactionsResult = SearchTransactionsResult;
            this.foundTransactions = foundTransactions;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    internal interface ValidateTransactionsSoapChannel : ServiceReference1.ValidateTransactionsSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    internal partial class ValidateTransactionsSoapClient : System.ServiceModel.ClientBase<ServiceReference1.ValidateTransactionsSoap>, ServiceReference1.ValidateTransactionsSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ValidateTransactionsSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ValidateTransactionsSoapClient.GetBindingForEndpoint(endpointConfiguration), ValidateTransactionsSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ValidateTransactionsSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ValidateTransactionsSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ValidateTransactionsSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ValidateTransactionsSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ValidateTransactionsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.GetNewTransactionsResponse ServiceReference1.ValidateTransactionsSoap.GetNewTransactions(ServiceReference1.GetNewTransactionsRequest request)
        {
            return base.Channel.GetNewTransactions(request);
        }
        
        public int GetNewTransactions(string login, string pwd, out string xmlTransaction, out string errorMessage)
        {
            ServiceReference1.GetNewTransactionsRequest inValue = new ServiceReference1.GetNewTransactionsRequest();
            inValue.Body = new ServiceReference1.GetNewTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            ServiceReference1.GetNewTransactionsResponse retVal = ((ServiceReference1.ValidateTransactionsSoap)(this)).GetNewTransactions(inValue);
            xmlTransaction = retVal.Body.xmlTransaction;
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.GetNewTransactionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.GetNewTransactionsResponse> ServiceReference1.ValidateTransactionsSoap.GetNewTransactionsAsync(ServiceReference1.GetNewTransactionsRequest request)
        {
            return base.Channel.GetNewTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetNewTransactionsResponse> GetNewTransactionsAsync(string login, string pwd)
        {
            ServiceReference1.GetNewTransactionsRequest inValue = new ServiceReference1.GetNewTransactionsRequest();
            inValue.Body = new ServiceReference1.GetNewTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            return ((ServiceReference1.ValidateTransactionsSoap)(this)).GetNewTransactionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.GetNewPriorAuthorizationTransactionsResponse ServiceReference1.ValidateTransactionsSoap.GetNewPriorAuthorizationTransactions(ServiceReference1.GetNewPriorAuthorizationTransactionsRequest request)
        {
            return base.Channel.GetNewPriorAuthorizationTransactions(request);
        }
        
        public int GetNewPriorAuthorizationTransactions(string login, string pwd, out string xmlTransaction, out string errorMessage)
        {
            ServiceReference1.GetNewPriorAuthorizationTransactionsRequest inValue = new ServiceReference1.GetNewPriorAuthorizationTransactionsRequest();
            inValue.Body = new ServiceReference1.GetNewPriorAuthorizationTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            ServiceReference1.GetNewPriorAuthorizationTransactionsResponse retVal = ((ServiceReference1.ValidateTransactionsSoap)(this)).GetNewPriorAuthorizationTransactions(inValue);
            xmlTransaction = retVal.Body.xmlTransaction;
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.GetNewPriorAuthorizationTransactionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.GetNewPriorAuthorizationTransactionsResponse> ServiceReference1.ValidateTransactionsSoap.GetNewPriorAuthorizationTransactionsAsync(ServiceReference1.GetNewPriorAuthorizationTransactionsRequest request)
        {
            return base.Channel.GetNewPriorAuthorizationTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetNewPriorAuthorizationTransactionsResponse> GetNewPriorAuthorizationTransactionsAsync(string login, string pwd)
        {
            ServiceReference1.GetNewPriorAuthorizationTransactionsRequest inValue = new ServiceReference1.GetNewPriorAuthorizationTransactionsRequest();
            inValue.Body = new ServiceReference1.GetNewPriorAuthorizationTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            return ((ServiceReference1.ValidateTransactionsSoap)(this)).GetNewPriorAuthorizationTransactionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.UploadTransactionResponse ServiceReference1.ValidateTransactionsSoap.UploadTransaction(ServiceReference1.UploadTransactionRequest request)
        {
            return base.Channel.UploadTransaction(request);
        }
        
        public int UploadTransaction(string login, string pwd, byte[] fileContent, string fileName, out string errorMessage, out byte[] errorReport)
        {
            ServiceReference1.UploadTransactionRequest inValue = new ServiceReference1.UploadTransactionRequest();
            inValue.Body = new ServiceReference1.UploadTransactionRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.fileContent = fileContent;
            inValue.Body.fileName = fileName;
            ServiceReference1.UploadTransactionResponse retVal = ((ServiceReference1.ValidateTransactionsSoap)(this)).UploadTransaction(inValue);
            errorMessage = retVal.Body.errorMessage;
            errorReport = retVal.Body.errorReport;
            return retVal.Body.UploadTransactionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.UploadTransactionResponse> ServiceReference1.ValidateTransactionsSoap.UploadTransactionAsync(ServiceReference1.UploadTransactionRequest request)
        {
            return base.Channel.UploadTransactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.UploadTransactionResponse> UploadTransactionAsync(string login, string pwd, byte[] fileContent, string fileName)
        {
            ServiceReference1.UploadTransactionRequest inValue = new ServiceReference1.UploadTransactionRequest();
            inValue.Body = new ServiceReference1.UploadTransactionRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.fileContent = fileContent;
            inValue.Body.fileName = fileName;
            return ((ServiceReference1.ValidateTransactionsSoap)(this)).UploadTransactionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.DownloadTransactionFileResponse ServiceReference1.ValidateTransactionsSoap.DownloadTransactionFile(ServiceReference1.DownloadTransactionFileRequest request)
        {
            return base.Channel.DownloadTransactionFile(request);
        }
        
        public int DownloadTransactionFile(string login, string pwd, string fileId, out string fileName, out byte[] file, out string errorMessage)
        {
            ServiceReference1.DownloadTransactionFileRequest inValue = new ServiceReference1.DownloadTransactionFileRequest();
            inValue.Body = new ServiceReference1.DownloadTransactionFileRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.fileId = fileId;
            ServiceReference1.DownloadTransactionFileResponse retVal = ((ServiceReference1.ValidateTransactionsSoap)(this)).DownloadTransactionFile(inValue);
            fileName = retVal.Body.fileName;
            file = retVal.Body.file;
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.DownloadTransactionFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.DownloadTransactionFileResponse> ServiceReference1.ValidateTransactionsSoap.DownloadTransactionFileAsync(ServiceReference1.DownloadTransactionFileRequest request)
        {
            return base.Channel.DownloadTransactionFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DownloadTransactionFileResponse> DownloadTransactionFileAsync(string login, string pwd, string fileId)
        {
            ServiceReference1.DownloadTransactionFileRequest inValue = new ServiceReference1.DownloadTransactionFileRequest();
            inValue.Body = new ServiceReference1.DownloadTransactionFileRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.fileId = fileId;
            return ((ServiceReference1.ValidateTransactionsSoap)(this)).DownloadTransactionFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.CheckForNewPriorAuthorizationTransactionsResponse ServiceReference1.ValidateTransactionsSoap.CheckForNewPriorAuthorizationTransactions(ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequest request)
        {
            return base.Channel.CheckForNewPriorAuthorizationTransactions(request);
        }
        
        public int CheckForNewPriorAuthorizationTransactions(string login, string pwd, out string errorMessage)
        {
            ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequest inValue = new ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequest();
            inValue.Body = new ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            ServiceReference1.CheckForNewPriorAuthorizationTransactionsResponse retVal = ((ServiceReference1.ValidateTransactionsSoap)(this)).CheckForNewPriorAuthorizationTransactions(inValue);
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.CheckForNewPriorAuthorizationTransactionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.CheckForNewPriorAuthorizationTransactionsResponse> ServiceReference1.ValidateTransactionsSoap.CheckForNewPriorAuthorizationTransactionsAsync(ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequest request)
        {
            return base.Channel.CheckForNewPriorAuthorizationTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.CheckForNewPriorAuthorizationTransactionsResponse> CheckForNewPriorAuthorizationTransactionsAsync(string login, string pwd)
        {
            ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequest inValue = new ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequest();
            inValue.Body = new ServiceReference1.CheckForNewPriorAuthorizationTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            return ((ServiceReference1.ValidateTransactionsSoap)(this)).CheckForNewPriorAuthorizationTransactionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.SetTransactionDownloadedResponse ServiceReference1.ValidateTransactionsSoap.SetTransactionDownloaded(ServiceReference1.SetTransactionDownloadedRequest request)
        {
            return base.Channel.SetTransactionDownloaded(request);
        }
        
        public int SetTransactionDownloaded(string login, string pwd, string fieldId, out string errorMessage)
        {
            ServiceReference1.SetTransactionDownloadedRequest inValue = new ServiceReference1.SetTransactionDownloadedRequest();
            inValue.Body = new ServiceReference1.SetTransactionDownloadedRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.fieldId = fieldId;
            ServiceReference1.SetTransactionDownloadedResponse retVal = ((ServiceReference1.ValidateTransactionsSoap)(this)).SetTransactionDownloaded(inValue);
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.SetTransactionDownloadedResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.SetTransactionDownloadedResponse> ServiceReference1.ValidateTransactionsSoap.SetTransactionDownloadedAsync(ServiceReference1.SetTransactionDownloadedRequest request)
        {
            return base.Channel.SetTransactionDownloadedAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.SetTransactionDownloadedResponse> SetTransactionDownloadedAsync(string login, string pwd, string fieldId)
        {
            ServiceReference1.SetTransactionDownloadedRequest inValue = new ServiceReference1.SetTransactionDownloadedRequest();
            inValue.Body = new ServiceReference1.SetTransactionDownloadedRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.fieldId = fieldId;
            return ((ServiceReference1.ValidateTransactionsSoap)(this)).SetTransactionDownloadedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceReference1.SearchTransactionsResponse ServiceReference1.ValidateTransactionsSoap.SearchTransactions(ServiceReference1.SearchTransactionsRequest request)
        {
            return base.Channel.SearchTransactions(request);
        }
        
        public int SearchTransactions(string login, string pwd, int direction, string callerLicense, string ePartner, int transactionID, int TransactionStatus, string transactionFileName, string transactionFromDate, string transactionToDate, int minRecordCount, int maxRecordCount, out string foundTransactions, out string errorMessage)
        {
            ServiceReference1.SearchTransactionsRequest inValue = new ServiceReference1.SearchTransactionsRequest();
            inValue.Body = new ServiceReference1.SearchTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.direction = direction;
            inValue.Body.callerLicense = callerLicense;
            inValue.Body.ePartner = ePartner;
            inValue.Body.transactionID = transactionID;
            inValue.Body.TransactionStatus = TransactionStatus;
            inValue.Body.transactionFileName = transactionFileName;
            inValue.Body.transactionFromDate = transactionFromDate;
            inValue.Body.transactionToDate = transactionToDate;
            inValue.Body.minRecordCount = minRecordCount;
            inValue.Body.maxRecordCount = maxRecordCount;
            ServiceReference1.SearchTransactionsResponse retVal = ((ServiceReference1.ValidateTransactionsSoap)(this)).SearchTransactions(inValue);
            foundTransactions = retVal.Body.foundTransactions;
            errorMessage = retVal.Body.errorMessage;
            return retVal.Body.SearchTransactionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ServiceReference1.SearchTransactionsResponse> ServiceReference1.ValidateTransactionsSoap.SearchTransactionsAsync(ServiceReference1.SearchTransactionsRequest request)
        {
            return base.Channel.SearchTransactionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.SearchTransactionsResponse> SearchTransactionsAsync(string login, string pwd, int direction, string callerLicense, string ePartner, int transactionID, int TransactionStatus, string transactionFileName, string transactionFromDate, string transactionToDate, int minRecordCount, int maxRecordCount)
        {
            ServiceReference1.SearchTransactionsRequest inValue = new ServiceReference1.SearchTransactionsRequest();
            inValue.Body = new ServiceReference1.SearchTransactionsRequestBody();
            inValue.Body.login = login;
            inValue.Body.pwd = pwd;
            inValue.Body.direction = direction;
            inValue.Body.callerLicense = callerLicense;
            inValue.Body.ePartner = ePartner;
            inValue.Body.transactionID = transactionID;
            inValue.Body.TransactionStatus = TransactionStatus;
            inValue.Body.transactionFileName = transactionFileName;
            inValue.Body.transactionFromDate = transactionFromDate;
            inValue.Body.transactionToDate = transactionToDate;
            inValue.Body.minRecordCount = minRecordCount;
            inValue.Body.maxRecordCount = maxRecordCount;
            return ((ServiceReference1.ValidateTransactionsSoap)(this)).SearchTransactionsAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ValidateTransactionsSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ValidateTransactionsSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ValidateTransactionsSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://dhpo.eclaimlink.ae/ValidateTransactions.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.ValidateTransactionsSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://dhpo.eclaimlink.ae/ValidateTransactions.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ValidateTransactionsSoap,
            
            ValidateTransactionsSoap12,
        }
    }
}
